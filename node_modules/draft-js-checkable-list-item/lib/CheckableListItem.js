"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _draftJs = require("draft-js");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CheckableListItem =
/*#__PURE__*/
function (_Component) {
  _inherits(CheckableListItem, _Component);

  function CheckableListItem() {
    _classCallCheck(this, CheckableListItem);

    return _possibleConstructorReturn(this, (CheckableListItem.__proto__ || Object.getPrototypeOf(CheckableListItem)).apply(this, arguments));
  }

  _createClass(CheckableListItem, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          offsetKey = _props.offsetKey,
          _props$blockProps = _props.blockProps,
          onChangeChecked = _props$blockProps.onChangeChecked,
          checked = _props$blockProps.checked;
      return _react.default.createElement("div", {
        className: "checkable-list-item-block".concat(checked ? ' is-checked' : ''),
        "data-offset-key": offsetKey
      }, _react.default.createElement("div", {
        className: "checkable-list-item-block__checkbox",
        contentEditable: false,
        suppressContentEditableWarning: true
      }, _react.default.createElement("input", {
        type: "checkbox",
        checked: checked,
        onChange: onChangeChecked
      })), _react.default.createElement("div", {
        className: "checkable-list-item-block__text"
      }, _react.default.createElement(_draftJs.EditorBlock, this.props)));
    }
  }]);

  return CheckableListItem;
}(_react.Component);

exports.default = CheckableListItem;